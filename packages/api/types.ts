/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/lookup/id/title/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Lookup ITAD game IDs by title
         * @description Lookup IsThereAnyDeal's game IDs by title
         *     This is not a full fledged search. Some title preprocessing will happen, but the lookup will only return IDs for titles, that match precisely.
         *     Typos or variations in title may not give you expected result.
         */
        post: operations["lookup-gid-title-v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lookup/id/shop/{shopId}/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Lookup ITAD game IDs by IDs on shop
         * @description Lookup IsThereAnyDeal's game IDs by shop's game IDs
         */
        post: operations["lookup-gid-shopid-v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lookup/shop/{shopId}/id/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Lookup game IDs on shop by ITAD game IDs
         * @description Lookup shop's game IDs by IsThereAnyDeal game IDs
         */
        post: operations["lookup-shopid-gid-v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/search/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search
         * @description Search for games by title
         */
        get: operations["games-search-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/lookup/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Lookup Game
         * @description Lookup game based on title or Steam appid
         */
        get: operations["games-lookup-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/info/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Game Info
         * @description Get basic game information
         */
        get: operations["games-info-v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/prices/v3": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Prices
         * @description Get games' prices
         */
        post: operations["games-prices-v3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/bundles/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bundles including Game
         * @description Get all bundles which contain the game
         */
        get: operations["games-bundles-v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/overview/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Price Overview
         * @description Get basic price overview for selected games.
         *
         *     For each game current best price will be loaded (optionally, only from selected shops),
         *     historical low price (among all covered shops).
         *
         *     Furthermore, result will also contain list of currently active bundles,
         *     which contain at least one of the queried games.
         *
         */
        post: operations["games-overview-v2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/historylow/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * History Low
         * @description Get historically lowest prices
         */
        post: operations["games-historylow-v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/storelow/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Store Low
         * @description Get historically lowest prices for individual stores
         */
        post: operations["games-storelow-v2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/history/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * History log
         * @description Get log of historical prices
         */
        get: operations["games-history-v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/subs/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Game Subscriptions
         * @description Get list of subscriptions the game is listed in.
         *
         */
        post: operations["games-subscriptions-v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/deals/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Deals List
         * @description Get current deals. Follows same rules as deals list displayed on the website, which means that
         *     you will not get one game more than once in the list.
         *
         *     For each game, the best price is displayed, ignoring stores that currently don't have game on sale,
         *     even if they currently have a better price.
         *
         */
        get: operations["deals-v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/waitlist/games/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Games in Waitlist
         * @description Get games in user's Waitlist
         */
        get: operations["waitlist-games-v1-get"];
        /**
         * Add to Waitlist
         * @description Add games to user's Waitlist
         */
        put: operations["waitlist-games-v1-put"];
        post?: never;
        /**
         * Delete from Waitlist
         * @description Delete games from user's Waitlist
         */
        delete: operations["waitlist-games-v1-delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collection/games/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Games in Collection
         * @description Get games in user's Collection
         */
        get: operations["collection-games-v1-get"];
        /**
         * Add to Collection
         * @description Add games to user's Collection
         */
        put: operations["collection-games-v1-put"];
        post?: never;
        /**
         * Delete from Collection
         * @description Delete games from user's Collection
         */
        delete: operations["collection-games-v1-delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collection/copies/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Copies
         * @description Get all copies user has in their Collection. Copies are returned as a simple list.
         *
         *     It is not necessary to have copy for each game in Collection, so you should not rely on this endpoint
         *     if you need to know about all games in user's Collection.
         *
         */
        get: operations["collection-copies-v1-get"];
        put?: never;
        /**
         * Add Copies
         * @description Add new copies. If the game is not already in a Collection, it will be added. Similarly, new tags will also be created.
         *
         *     Same copies may exist multiple times for a single game, ITAD does not check for duplicates.
         *
         *     This operation is atomic, either all copies are added or none.
         *
         */
        post: operations["collection-copies-v1-post"];
        /**
         * Delete Copies
         * @description Delete Collection copies.
         *
         *     Copies that do not exist or don't belong to user will be silently ignored.
         *
         *     Operation is atomic. Either all copies are deleted or none.
         *
         */
        delete: operations["collection-copies-v1-delete"];
        options?: never;
        head?: never;
        /**
         * Update Copies
         * @description Update one or more copies.
         *
         *     You can issue partial updates on copy, only properties that are included for a copy will be updated.
         *
         *     This operation is atomic, either all copies are updated or none.
         *
         */
        patch: operations["collection-copies-v1-patch"];
        trace?: never;
    };
    "/collection/groups/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all Categories
         * @description Get all Collection categories, both the user created ones and default one.
         *     Default category has id 0 and will always be listed last. User set order of categories is respected in the response.
         *
         */
        get: operations["collection-groups-v1-get"];
        put?: never;
        /**
         * Create new Category
         * @description Create Collection category. Categories with same name may exist.
         *
         *     Successful response will return the created category.
         *
         */
        post: operations["collection-groups-v1-post"];
        /**
         * Delete Categories
         * @description Delete Collection categories.
         *
         *     Default category or categories that do not exist or user does not own will be silently ignored.
         *
         */
        delete: operations["collection-groups-v1-delete"];
        options?: never;
        head?: never;
        /**
         * Update Categories
         * @description Update one or more categories.
         *
         *     For each category that you are going to update, only `id` is required. Fields that you do not want to update may be
         *     set to `null` or omitted fully. Categories that do not exist or user does not own will be ignored.
         *
         *     Default category (id: `0`) may have only `public` property updated. Other properties will be ignored.
         *
         *     This operation is atomic, either all categories update or none. Successful response is the full category list,
         *     including categories that were not updated.
         *
         */
        patch: operations["collection-groups-v1-patch"];
        trace?: never;
    };
    "/stats/waitlist/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Waitlist Stats
         * @description Get Waitlist statistics for a game
         *
         *     > Note: stats do not take into consideration users' regions.
         *     > If they have set their price limit to be a historical low, stats will be computed
         *     > for all users as if they were in the region you specify
         *
         */
        get: operations["stats-waitlist-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/most-waitlisted/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Most Waitlisted
         * @description Get list of most Waitlisted games
         *
         */
        get: operations["stats-most-waitlisted-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/most-collected/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Most Collected
         * @description Get list of most Collected games
         *
         */
        get: operations["stats-most-collected-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/most-popular/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Most Popular
         * @description Get list of most popular games. Popularity for each game is computed as Waitlisted count + Collected count.
         *
         */
        get: operations["stats-most-popular-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/info/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * User Info
         * @description Get user info, currently just a username
         */
        get: operations["user-info-v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/notes/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get notes
         * @description Get user's game notes
         *
         */
        get: operations["user-notes-v1-get"];
        /**
         * Add or edit notes
         * @description Add or edit game notes. This operation is atomic and idempotent.
         *
         */
        put: operations["user-notes-v1-put"];
        post?: never;
        /**
         * Delete notes
         * @description Delete game notes. This operation is atomic.
         *
         */
        delete: operations["user-notes-v1-delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profiles/link/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Link profile
         * @description Profile is an object identifying remote account. You need linked profile to use sync endpoints.
         *
         *     After successful link you will get profile token, which is used in subsequent profile operations,
         *     usually as an `ITAD-Profile` header.
         *
         *     Linking is idempotent, if you lose your token, or you need it in different instance of your app,
         *     you can link the same profile again.
         *
         */
        put: operations["profiles-link-v1-put"];
        post?: never;
        /** Unlink profile */
        delete: operations["profiles-link-v1-delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profiles/sync/waitlist/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Sync Waitlist
         * @description Sync Waitlist with IsThereAnyDeal. User can set category for your profile and default notification rules
         *     in their [settings](https://isthereanydeal.com/settings/profiles/), same as with natively supported profiles.
         *
         */
        put: operations["profiles-sync-waitlist-v1-put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profiles/sync/collection/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Sync Collection
         * @description Sync Collection with IsThereAnyDeal. User can set category for your profile
         *     in their [settings](https://isthereanydeal.com/settings/profiles/), same as with natively supported profiles.
         *
         *     Games are synced as redeemed copies. If there already is a redemeed copy with the same shop in user's Collection,
         *     new copy will not be added.
         *
         */
        put: operations["profiles-sync-collection-v1-put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List notifications
         * @description Get user's notifications
         */
        get: operations["notifications-list-v1-get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/waitlist/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Waitlist notification detail
         * @description Get details of Waitlist notification
         */
        get: operations["notifications-waitlist-v1-get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/read/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Mark notification read
         * @description Mark single notification as read
         */
        put: operations["notifications-read-v1-put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/read/all/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Mark all notifications read
         * @description Mark all notifications as read
         */
        put: operations["notifications-read-all-v1-put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/shops/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Shops
         * @description Return information about shops
         */
        get: operations["service-shops-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/early-access/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Early Access Games
         * @description Returns list of Steam appids, which are currently considered to be early in early access
         */
        get: operations["internal-earlyaccess-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/players/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Number of Players Statistics */
        get: operations["internal-players-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/hltb/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** HowLongToBeat Overview */
        get: operations["internal-hltb-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/reviews/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Reviews Score
         * @description Returns Metacritic user reviews overview and OpenCritic overview for a given game
         */
        get: operations["internal-reviews-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/rates/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Conversion Rates */
        get: operations["internal-rates-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/exfgls/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Excluded from Family Sharing */
        get: operations["internal-exfgls-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/twitch/stream/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Current stream of Twitch channel */
        get: operations["internal-twitchstream-v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export interface webhooks {
    ping: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Ping event
         * @description Event you can use to test if the webhook is set up correctly.
         *     Can be triggered manually from [settings](https://isthereanydeal.com/settings/webhooks/).
         *
         */
        post: operations["webhook-ping-post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    notification: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Waitlist notification event
         * @description This event is trigger on new Waitlist notifications
         *
         *     Event's payload is a list of games and their deals that passed user's notification settings,
         *     similar to the Waitlist email notification you may receive.
         *
         */
        post: operations["webhook-notification-post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export interface components {
    schemas: {
        /** Game IDs Lookup by Title Response */
        "resp.lookup.gid-by-title": {
            [key: string]: null | string;
        };
        /** Game IDs lookup by shop ID response */
        "resp.lookup.gid-by-shopid": {
            [key: string]: null | string;
        };
        /** Shop IDs Lookup Response */
        "resp.lookup.shopid-by-gid": Record<string, never>;
        /** Game Type */
        "obj.game-type": ("game" | "dlc" | "package") | null;
        /** Asset Map */
        "obj.asset-map": {
            banner145?: string;
            banner300?: string;
            banner400?: string;
            banner600?: string;
            boxart?: string;
        };
        /** Game */
        "obj.game": {
            /** Format: uuid */
            id: string;
            slug: string;
            title: string;
            type: components["schemas"]["obj.game-type"];
            mature: boolean;
            assets: components["schemas"]["obj.asset-map"];
        };
        /** Game Search Response */
        "resp.games.search": components["schemas"]["obj.game"][];
        /** Game Lookup Response */
        "resp.games.lookup": {
            found: boolean;
            game?: components["schemas"]["obj.game"];
        };
        /** Company */
        "obj.company": {
            id: number;
            name: string;
        };
        /** Reviews */
        "obj.reviews": {
            score: number | null;
            source: string;
            count: number | null;
            /** Format: uri */
            url: string;
        };
        /** Game Info Response */
        "resp.games.info": {
            /** Format: uuid */
            id: string;
            slug: string;
            title: string;
            type: components["schemas"]["obj.game-type"];
            mature: boolean;
            assets: components["schemas"]["obj.asset-map"];
            earlyAccess: boolean;
            achievements: boolean;
            tradingCards: boolean;
            appid: number | null;
            tags: string[];
            /** Format: date */
            releaseDate: string | null;
            developers: components["schemas"]["obj.company"][];
            publishers: components["schemas"]["obj.company"][];
            reviews: components["schemas"]["obj.reviews"][];
            stats: {
                rank?: number;
                waitlisted?: number;
                collected?: number;
            };
            players: {
                recent: number;
                day: number;
                week: number;
                peak: number;
            } | null;
            urls: {
                /** Format: uri */
                game: string;
            };
        };
        /** Price */
        "obj.price": {
            amount: number;
            amountInt: number;
            currency: string;
        };
        /** Shop */
        "obj.shop": {
            id: number;
            name: string;
        };
        /** Deal Flag */
        "obj.deal-flag": ("H" | "N" | "S") | null;
        /** DRM */
        "obj.drm": {
            id: number;
            name: string;
        };
        /** DRM List */
        "obj.drm-list": components["schemas"]["obj.drm"][];
        /** Platform */
        "obj.platform": {
            id: number;
            name: string;
        };
        /** Platform List */
        "obj.platform-list": components["schemas"]["obj.platform"][];
        /** Deal */
        "obj.deal2": {
            shop: components["schemas"]["obj.shop"];
            price: components["schemas"]["obj.price"];
            regular: components["schemas"]["obj.price"];
            cut: number;
            voucher: string | null;
            storeLow: null | components["schemas"]["obj.price"];
            flag: components["schemas"]["obj.deal-flag"];
            drm: components["schemas"]["obj.drm-list"];
            platforms: components["schemas"]["obj.platform-list"];
            /** Format: date-time */
            timestamp: string;
            /** Format: date-time */
            expiry: string | null;
            /** Format: uri */
            url: string;
        };
        /** Prices Response */
        "resp.games.prices": {
            /**
             * Format: uuid
             * @description Game ID
             */
            id: string;
            historyLow: {
                all: null | components["schemas"]["obj.price"];
                y1: null | components["schemas"]["obj.price"];
                m3: null | components["schemas"]["obj.price"];
            };
            deals: components["schemas"]["obj.deal2"][];
        }[];
        /** Bundle */
        "obj.bundle": {
            id: number;
            title: string;
            page: {
                id: number;
                name: string;
                shopId?: number | null;
            };
            /** Format: uri */
            url: string;
            /** Format: uri */
            details?: string;
            isMature: boolean;
            /** Format: date-time */
            publish: string;
            /** Format: date-time */
            expiry: string | null;
            counts: {
                games: number;
                media: number;
            };
            tiers: {
                price: components["schemas"]["obj.price"] | null;
                games: components["schemas"]["obj.game"][];
            }[];
        };
        /** Bundles with Game Response */
        "resp.games.bundles": components["schemas"]["obj.bundle"][];
        /**
         * Overview Deal
         * @description This object is basically the same as regular Deal, difference being storeLow and historyLow properties are not included
         */
        "obj.deal-overview": {
            shop: components["schemas"]["obj.shop"];
            price: components["schemas"]["obj.price"];
            regular: components["schemas"]["obj.price"];
            cut: number;
            voucher: string | null;
            flag: components["schemas"]["obj.deal-flag"];
            drm: components["schemas"]["obj.drm-list"];
            platforms: components["schemas"]["obj.platform-list"];
            /** Format: date-time */
            timestamp: string;
            /** Format: date */
            expiry: string | null;
            /** Format: uri */
            url: string;
        };
        /** Historical Low */
        "obj.historylow": {
            shop: components["schemas"]["obj.shop"];
            price: components["schemas"]["obj.price"];
            regular: components["schemas"]["obj.price"];
            cut: number;
            /** Format: date-time */
            timestamp: string;
        };
        /** Games Overview Response */
        "resp.games.overview": {
            prices: {
                /** Format: uuid */
                id: string;
                current: components["schemas"]["obj.deal-overview"] | null;
                lowest: components["schemas"]["obj.historylow"] | null;
                bundled: number;
                urls: {
                    /** Format: uri */
                    game: string;
                };
            }[];
            bundles: components["schemas"]["obj.bundle"][];
        };
        /** Historical Lows Response */
        "resp.games.historylow": {
            /** Format: uuid */
            id: string;
            low: components["schemas"]["obj.historylow"];
        }[];
        /** Store Lows Response */
        "resp.games.storelow": {
            /** Format: uuid */
            id: string;
            lows: {
                shop: components["schemas"]["obj.shop"];
                price: components["schemas"]["obj.price"];
                regular: components["schemas"]["obj.price"];
                cut: number;
                /** Format: date-time */
                timestamp: string;
            }[];
        }[];
        /** History response */
        "resp.games.history": {
            /** Format: date-time */
            timestamp: string;
            shop: components["schemas"]["obj.shop"];
            deal: {
                price: components["schemas"]["obj.price"];
                regular: components["schemas"]["obj.price"];
                cut: number;
            } | null;
        }[];
        /** Game Subscription */
        "obj.game.subscription": {
            /** Subscription ID */
            id: number;
            /** Subscription name */
            name: string;
            leaving: string | null;
        };
        /** Games Subscriptions Response */
        "resp.games.subscriptions": {
            /**
             * Game ID
             * Format: uuid
             */
            id: string;
            subs: components["schemas"]["obj.game.subscription"][];
        }[];
        /** Deal */
        "obj.deal": {
            shop: components["schemas"]["obj.shop"];
            price: components["schemas"]["obj.price"];
            regular: components["schemas"]["obj.price"];
            cut: number;
            voucher: string | null;
            storeLow: null | components["schemas"]["obj.price"];
            historyLow: null | components["schemas"]["obj.price"];
            historyLow_1y: null | components["schemas"]["obj.price"];
            historyLow_3m: null | components["schemas"]["obj.price"];
            flag: components["schemas"]["obj.deal-flag"];
            drm: components["schemas"]["obj.drm-list"];
            platforms: components["schemas"]["obj.platform-list"];
            /** Format: date-time */
            timestamp: string;
            /** Format: date-time */
            expiry: string | null;
            /** Format: uri */
            url: string;
        };
        /** Deals Response */
        "resp.deals": {
            /** Format: int32 */
            nextOffset: number;
            hasMore: boolean;
            list: {
                /** Format: uuid */
                id: string;
                slug: string;
                title: string;
                type: components["schemas"]["obj.game-type"];
                mature?: boolean;
                assets?: components["schemas"]["obj.asset-map"];
                deal: components["schemas"]["obj.deal"];
            }[];
        };
        /** Waitlist Game */
        "obj.waitlist.game": {
            /** Format: uuid */
            id: string;
            slug: string;
            title: string;
            type: components["schemas"]["obj.game-type"];
            assets: components["schemas"]["obj.asset-map"];
            mature: boolean;
            added: string | null;
        };
        /** Waitlist Games Response */
        "resp.waitlist.games": components["schemas"]["obj.waitlist.game"][];
        /** Collection Game */
        "obj.collection.game": {
            /** Format: uuid */
            id: string;
            slug: string;
            title: string;
            type: components["schemas"]["obj.game-type"];
            assets: components["schemas"]["obj.asset-map"];
            mature: boolean;
            group: number;
            added: string | null;
        };
        /** Tag */
        "obj.user-tag": {
            id: number;
            tag: string;
        };
        /** Collection Copy */
        "obj.collection.copy": {
            id: number;
            game: {
                /** Format: uuid */
                id: string;
            };
            shop: components["schemas"]["obj.shop"] | null;
            redeemed: boolean;
            price: components["schemas"]["obj.price"] | null;
            note: string | null;
            tags: components["schemas"]["obj.user-tag"][];
            /** Format: date-time */
            added: string;
        };
        /** New Collection Copy */
        "obj.collection.copy.new": {
            /** Format: uuid */
            gameId: string;
            redeemed: boolean;
            shop?: number | null;
            price?: {
                /** Format: float */
                amount: number;
                currency: string;
            } | null;
            note?: string | null;
            tags?: string[] | null;
        };
        /** Collection Copy Patch */
        "obj.collection.copy.patch": {
            id: number;
            redeemed?: boolean;
            shop?: number | null;
            price?: {
                /** Format: float */
                amount: number;
                currency: string;
            } | null;
            note?: string | null;
            tags?: string[] | null;
        };
        /** Collection Category */
        "obj.collection.group": {
            id: number;
            title: string;
            public: boolean;
        };
        /** New Collection Category */
        "obj.collection.group.new": {
            title: string;
            public: boolean;
        };
        /** Collection Category Patch */
        "obj.collection.group.patch": {
            id: number;
            title?: string | null;
            public?: boolean | null;
            position?: number | null;
        };
        bucket: {
            bucket: number;
            count: number;
            percentile: number;
        };
        /** Waitlist Stats Response */
        "resp.stats.waitlist": {
            count: number;
            price: {
                /** @description Currency in which the prices are listed */
                currency: string;
                /** @description How many users did not set price limit */
                any: number;
                average: number;
                buckets: components["schemas"]["bucket"][];
            };
            cut: {
                average: number;
                buckets: components["schemas"]["bucket"][];
            };
            $defs: {
                bucket: {
                    bucket: number;
                    count: number;
                    percentile: number;
                };
            };
        };
        /** Ranked Game */
        "obj.game-ranked": {
            position: number;
            /** Format: uuid */
            id: string;
            slug: string;
            title: string;
            type: components["schemas"]["obj.game-type"];
            mature: boolean;
            count: number;
        };
        /** Ranked Games Response */
        "resp.stats.ranked-games": components["schemas"]["obj.game-ranked"][];
        /** User Info Response */
        "resp.user.info": {
            username: string | null;
        };
        /** User game note */
        "obj.note": {
            /**
             * Format: uuid
             * @description Game ID
             */
            gid: string;
            /** @description Non-empty string */
            note: string;
        };
        /** Get Notes Response */
        "resp.notes.get": components["schemas"]["obj.note"][];
        /**
         * Profile
         * @description Description of the account
         */
        "obj.profile": {
            /** @description Per-app unique ID. This can be any string, but it needs to uniquely identify the account within your app. */
            accountId: string;
            /** @description Name of the account. Does not need to be unique, it's meant to be a human-friendly name. */
            accountName: string;
        };
        /** Link Profile Response */
        "resp.link.put": {
            token: string;
        };
        /** Waitlist Sync Entry */
        "obj.waitlist.entry": {
            /** @description Shop ID */
            shop: number;
            /** @description ID can be any string that will identify the game. It should be stable and not change in the future.
             *
             *     ID can also used to identify the game, if you use same IDs that we use for tracking shops. If a game is not identified
             *     with shop and id, we will use title.
             *
             *     For Steam we use full ids, i.e. app/{id}, sub/{id} or bundle/{id}.
             *      */
            id: string;
            /** @description Title of the game.
             *      */
            title: string;
        };
        /** Sync Response */
        "resp.sync.waitlist": {
            /** @description Number of games that were successfully parsed */
            total: number;
            /** @description Number of games that were added to Waitlist */
            added: number;
            /** @description Number of games that were removed from Waitlist */
            removed: number;
        };
        /** Collection Sync Entry */
        "obj.collection.entry": {
            /** @description Shop ID */
            shop: number;
            /** @description ID can be any string that will identify the game. It should be stable and not change in the future.
             *
             *     ID can also used to identify the game, if you use same IDs that we use for tracking shops. If a game is not identified
             *     with shop and id, we will use title.
             *
             *     For Steam we use full ids, i.e. app/{id}, sub/{id} or bundle/{id}.
             *      */
            id: string;
            /** @description Title of the game.
             *      */
            title: string;
            /** @description Play time in minutes */
            playtime?: number | null;
            lastPlayed?: string | null;
        };
        /** Sync Response */
        "resp.sync.collection": {
            /** @description Number of copies that were successfully parsed */
            total: number;
            /** @description Number of copies that were added to Collection */
            added: number;
            /** @description Number of copies that were removed from Collection */
            removed: number;
        };
        /** Notification */
        "obj.notification": {
            /** Format: uuid */
            id: string;
            /** @enum {string} */
            type: "waitlist";
            title: string;
            /** Format: date-time */
            timestamp: string;
            read: string | null;
        };
        /** Price */
        "obj.price-nullable": components["schemas"]["obj.price"] | null;
        /** Waitlist Notification Deal */
        "obj.notification.deal": {
            shop: components["schemas"]["obj.shop"];
            price: components["schemas"]["obj.price"];
            regular: components["schemas"]["obj.price"];
            cut: number;
            voucher: string | null;
            storeLow: components["schemas"]["obj.price-nullable"];
            flag: components["schemas"]["obj.deal-flag"];
            drm: components["schemas"]["obj.drm-list"];
            platforms: components["schemas"]["obj.platform-list"];
            /** Format: date-time */
            timestamp: string;
            expiry: string | null;
            /** Format: uri */
            url: string;
        };
        /** Waitlist Notification Game */
        "obj.notification.game": {
            /** Format: uuid */
            id: string;
            slug: string;
            title: string;
            type: components["schemas"]["obj.game-type"];
            mature: boolean;
            historyLow: components["schemas"]["obj.price-nullable"];
            lastPrice: components["schemas"]["obj.price-nullable"];
            deals: components["schemas"]["obj.notification.deal"][];
        };
        /** Waitlist Notification */
        "obj.notification.waitlist": {
            /** Format: uuid */
            id: string;
            /** Format: date-time */
            timestamp: string;
            read: string | null;
            games: components["schemas"]["obj.notification.game"][];
        };
        /** Shops response */
        "resp.service.shops": {
            id: number;
            title: string;
            deals: number;
            games: number;
            /** Format: date-time */
            update: string | null;
        }[];
        /** Players Statistics Response */
        "resp.internal.players": {
            current: number;
            day: number;
            peak: number;
        };
        /** HowLongToBeat Overview Response */
        "resp.internal.hltb": {
            id: number;
            main: null | number;
            extra: null | number;
            complete: null | number;
        };
        /** Reviews Overview Response */
        "resp.internal.reviews": {
            metauser: {
                score?: number | null;
                verdict?: string | null;
                /** Format: uri */
                url?: string;
            } | null;
            opencritic: {
                score?: number | null;
                verdict?: string | null;
                /** Format: uri */
                url?: string;
            } | null;
        };
        /** Currency Rates Response */
        "resp.internal.rates": {
            from: string;
            to: string;
            rate: number;
        }[];
        /** Excluded from Family Sharing Response */
        "resp.internal.exfgls": {
            [key: string]: boolean;
        };
        "resp.internal.twitchstream": {
            user_name: string;
            title: string;
            thumbnail_url: string;
            viewer_count: number;
            game: string;
        } | null;
    };
    responses: {
        /** @description Error response */
        "error-response": {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @description HTTP status code */
                    status_code: number;
                    /** @description Error description */
                    reason_phrase: string;
                };
            };
        };
        /** @description Array Validation Error Response */
        "resp.error.array-of-objects-validation": {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "status_code": 400,
                 *       "reason_phrase": "Bad Request",
                 *       "details": [
                 *         0,
                 *         {
                 *           "propety": "Missing data for 'property'"
                 *         }
                 *       ]
                 *     } */
                "application/json": {
                    /** @description HTTP status code */
                    status_code: number;
                    /** @description Error description */
                    reason_phrase: string;
                    /** @description When this endpoint fails during data validation, validation errors will be listed
                     *     as array of two items.
                     *
                     *     First item is the index of object in request data.
                     *
                     *     Second item is map of errors, with key being the property that failed to validate and value is the error itself.
                     *      */
                    details?: [
                        number,
                        {
                            [key: string]: string;
                        }
                    ];
                };
            };
        };
        /** @description Data Validation Error Response */
        "resp.error.object-validation": {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "status_code": 400,
                 *       "reason_phrase": "Bad Request",
                 *       "details": {
                 *         "propety": "Missing data for 'property'"
                 *       }
                 *     } */
                "application/json": {
                    /** @description HTTP status code */
                    status_code: number;
                    /** @description Error description */
                    reason_phrase: string;
                    /** @description When this endpoint fails during data validation, validation errors will be provided as a map,
                     *     where key is the property that failed to validate and value is the error itself.
                     *      */
                    details?: {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    parameters: {
        /** @description Two letter country code (ISO 3166-1 alpha-2) */
        country: string;
        /** @description Game ID */
        gid: string;
        /** @description List of shop IDs */
        shops: number[];
        "headers.user-agent": "ITAD-Webhooks/1.0 (+https://isthereanydeal.com)";
        "headers.content-type": "application/json";
        /** @description ID of the Webhook */
        "headers.hook-id": string;
        /** @description Event that generated the request */
        "headers.event": string;
    };
    requestBodies: {
        /** @description List of Game IDs */
        gids: {
            content: {
                /** @example [
                 *       "01849783-6a26-7147-ab32-71804ca47e8e",
                 *       "01849782-1017-7389-8de4-c97c587fd7e3"
                 *     ] */
                "application/json": string[];
            };
        };
        /** @description List of Game IDs */
        "gids-200": {
            content: {
                /** @example [
                 *       "01849783-6a26-7147-ab32-71804ca47e8e",
                 *       "01849782-1017-7389-8de4-c97c587fd7e3"
                 *     ] */
                "application/json": string[];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "lookup-gid-title-v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of titles */
        requestBody?: {
            content: {
                /** @example [
                 *       "Baldurs Gate 3",
                 *       "Half-Life 2",
                 *       "Unknown game"
                 *     ] */
                "application/json": string[];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.lookup.gid-by-title"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "lookup-gid-shopid-v1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                shopId: number;
            };
            cookie?: never;
        };
        /** @description List of shop's game IDs */
        requestBody?: {
            content: {
                /** @example [
                 *       "app/220"
                 *     ] */
                "application/json": string[];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.lookup.gid-by-shopid"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "lookup-shopid-gid-v1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                shopId: number;
            };
            cookie?: never;
        };
        /** @description List of game IDs */
        requestBody?: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.lookup.shopid-by-gid"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-search-v1": {
        parameters: {
            query: {
                /** @description Find games by name */
                title: string;
                /** @description Maximum number of results to return */
                results?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Search response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.search"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-lookup-v1": {
        parameters: {
            query?: {
                /** @description Find game by it's name */
                title?: string;
                /** @description Find game by Steam appid */
                appid?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Lookup response with found game */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.lookup"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-info-v2": {
        parameters: {
            query: {
                /** @description Game ID */
                id: components["parameters"]["gid"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Info response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.info"];
                };
            };
            400: components["responses"]["error-response"];
            /** @description Game not found */
            404: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-prices-v3": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description Only load deals, omit prices that have no price cut */
                deals?: boolean;
                /** @description Allow vouchers in prices */
                vouchers?: boolean;
                /** @description How many prices to load per each game, 0 or omit for no limit */
                capacity?: number;
                /** @description List of shop IDs */
                shops?: components["parameters"]["shops"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of Game IDs for which to load prices */
        requestBody?: components["requestBodies"]["gids-200"];
        responses: {
            /** @description Info response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.prices"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-bundles-v2": {
        parameters: {
            query: {
                /** @description Game ID */
                id: components["parameters"]["gid"];
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description Include expired bundles */
                expired?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.bundles"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-overview-v2": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description List of shop IDs */
                shops?: components["parameters"]["shops"];
                /** @description Allow vouchers in prices */
                vouchers?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["gids-200"];
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.overview"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-historylow-v1": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of Game IDs for which to load historical lows */
        requestBody?: components["requestBodies"]["gids-200"];
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.historylow"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-storelow-v2": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description List of shop IDs */
                shops?: components["parameters"]["shops"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of Game IDs for which to load store lows */
        requestBody?: components["requestBodies"]["gids-200"];
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.storelow"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-history-v2": {
        parameters: {
            query: {
                /** @description Game ID */
                id: components["parameters"]["gid"];
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description List of shop IDs */
                shops?: components["parameters"]["shops"];
                /** @description Load only price changes after this date.
                 *     By default, only last 3 months are loaded
                 *      */
                since?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.history"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "games-subscriptions-v1": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["gids-200"];
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.games.subscriptions"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "deals-v2": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description Deals list offset */
                offset?: number;
                /** @description How many deals to return */
                limit?: number;
                /** @description Sorting values, same as in deals list on the website */
                sort?: string;
                /** @description Load non-sale prices */
                nondeals?: boolean;
                /** @description Load deals for mature prices */
                mature?: boolean;
                /** @description List of shop IDs separated by comma */
                shops?: number[];
                /** @description Filter string */
                filter?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Deals list */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.deals"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "waitlist-games-v1-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.waitlist.games"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "waitlist-games-v1-put": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["gids"];
        responses: {
            /** @description Successful response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "waitlist-games-v1-delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["gids"];
        responses: {
            /** @description Successful response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-games-v1-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.collection.game"][];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-games-v1-put": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["gids"];
        responses: {
            /** @description Successful response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-games-v1-delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["gids"];
        responses: {
            /** @description Successful response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-copies-v1-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.collection.copy"][];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-copies-v1-post": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Copies to add */
        requestBody?: {
            content: {
                /** @example [
                 *       {
                 *         "gameId": "018d937e-e9ab-70f4-bd05-1db7a138eb39",
                 *         "redeemed": false,
                 *         "shop": 61,
                 *         "price": {
                 *           "amount": 33.33,
                 *           "currency": "EUR"
                 *         },
                 *         "note": "Api note",
                 *         "tags": [
                 *           "From Api",
                 *           "Second tag"
                 *         ]
                 *       },
                 *       {
                 *         "gameId": "018d937e-e9ab-70f4-bd05-1db7a138eb39",
                 *         "redeemed": false,
                 *         "shop": 4,
                 *         "price": null,
                 *         "note": null,
                 *         "tags": [
                 *           "From Api"
                 *         ]
                 *       }
                 *     ] */
                "application/json": components["schemas"]["obj.collection.copy.new"][];
            };
        };
        responses: {
            /** @description Successful response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["resp.error.array-of-objects-validation"];
            default: components["responses"]["resp.error.array-of-objects-validation"];
        };
    };
    "collection-copies-v1-delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of copy IDs */
        requestBody?: {
            content: {
                /** @example [
                 *       123,
                 *       124,
                 *       125
                 *     ] */
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-copies-v1-patch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["obj.collection.copy.patch"][];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["resp.error.array-of-objects-validation"];
            default: components["responses"]["resp.error.array-of-objects-validation"];
        };
    };
    "collection-groups-v1-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.collection.group"][];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-groups-v1-post": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Category to create */
        requestBody?: {
            content: {
                /** @example {
                 *       "title": "New Collection Category",
                 *       "public": true
                 *     } */
                "application/json": components["schemas"]["obj.collection.group.new"];
            };
        };
        responses: {
            /** @description Created category */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.collection.group"];
                };
            };
            400: components["responses"]["resp.error.object-validation"];
            default: components["responses"]["resp.error.object-validation"];
        };
    };
    "collection-groups-v1-delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of category IDs */
        requestBody?: {
            content: {
                /** @example [
                 *       123,
                 *       124,
                 *       125
                 *     ] */
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "collection-groups-v1-patch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["obj.collection.group.patch"][];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.collection.group"][];
                };
            };
            400: components["responses"]["resp.error.array-of-objects-validation"];
            default: components["responses"]["resp.error.array-of-objects-validation"];
        };
    };
    "stats-waitlist-v1": {
        parameters: {
            query: {
                /** @description Game ID */
                id: components["parameters"]["gid"];
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
                /** @description Price bucket size */
                bucket_price?: number;
                /** @description Cut bucket size */
                bucket_cut?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.stats.waitlist"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "stats-most-waitlisted-v1": {
        parameters: {
            query?: {
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.stats.ranked-games"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "stats-most-collected-v1": {
        parameters: {
            query?: {
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.stats.ranked-games"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "stats-most-popular-v1": {
        parameters: {
            query?: {
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.stats.ranked-games"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "user-info-v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.user.info"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "user-notes-v1-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.notes.get"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "user-notes-v1-put": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of notes */
        requestBody: {
            content: {
                "application/json": components["schemas"]["obj.note"][];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "user-notes-v1-delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of game IDs */
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "profiles-link-v1-put": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Profile to link */
        requestBody: {
            content: {
                /** @example {
                 *       "accountId": "acc7896132977",
                 *       "accountName": "My Account"
                 *     } */
                "application/json": components["schemas"]["obj.profile"];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.link.put"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "profiles-link-v1-delete": {
        parameters: {
            query?: never;
            header: {
                "ITAD-Profile": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "profiles-sync-waitlist-v1-put": {
        parameters: {
            query?: never;
            header: {
                "ITAD-Profile": string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Games to sync with IsThereAnyDeal */
        requestBody: {
            content: {
                /** @example [
                 *       {
                 *         "shop": 61,
                 *         "id": "my-waitlist-id-1",
                 *         "title": "Creatures of Ava: Deluxe Edition"
                 *       },
                 *       {
                 *         "shop": 4,
                 *         "id": "my-waitlist-id-3",
                 *         "title": ">observer_"
                 *       }
                 *     ] */
                "application/json": components["schemas"]["obj.waitlist.entry"][];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.sync.waitlist"];
                };
            };
            400: components["responses"]["resp.error.array-of-objects-validation"];
            default: components["responses"]["resp.error.array-of-objects-validation"];
        };
    };
    "profiles-sync-collection-v1-put": {
        parameters: {
            query?: never;
            header: {
                "ITAD-Profile": string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Games to sync with IsThereAnyDeal */
        requestBody: {
            content: {
                /** @example [
                 *       {
                 *         "shop": 61,
                 *         "id": "my-tracking-id-2",
                 *         "title": "Creatures of Ava: Deluxe Edition",
                 *         "playtime": 100,
                 *         "lastPlayed": "2024-08-26T22:04:08+01:00"
                 *       },
                 *       {
                 *         "shop": 4,
                 *         "id": "my-tracking-id-3",
                 *         "title": ">observer_"
                 *       }
                 *     ] */
                "application/json": components["schemas"]["obj.collection.entry"][];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.sync.collection"];
                };
            };
            400: components["responses"]["resp.error.array-of-objects-validation"];
            default: components["responses"]["resp.error.array-of-objects-validation"];
        };
    };
    "notifications-list-v1-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.notification"][];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "notifications-waitlist-v1-get": {
        parameters: {
            query: {
                /** @description Notification ID */
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["obj.notification.waitlist"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "notifications-read-v1-put": {
        parameters: {
            query: {
                /** @description Notification ID */
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "notifications-read-all-v1-put": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "service-shops-v1": {
        parameters: {
            query?: {
                /** @description Two letter country code (ISO 3166-1 alpha-2) */
                country?: components["parameters"]["country"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of shops and their details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.service.shops"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-earlyaccess-v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number[];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-players-v1": {
        parameters: {
            query: {
                appid: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.internal.players"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-hltb-v1": {
        parameters: {
            query: {
                appid: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.internal.hltb"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-reviews-v1": {
        parameters: {
            query: {
                appid: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.internal.reviews"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-rates-v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.internal.rates"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-exfgls-v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List of appids */
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.internal.exfgls"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "internal-twitchstream-v1": {
        parameters: {
            query: {
                channel: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["resp.internal.twitchstream"];
                };
            };
            400: components["responses"]["error-response"];
            default: components["responses"]["error-response"];
        };
    };
    "webhook-ping-post": {
        parameters: {
            query?: never;
            header: {
                "User-Agent": components["parameters"]["headers.user-agent"];
                "Content-Type": components["parameters"]["headers.content-type"];
                /** @description ID of the Webhook */
                "ITAD-Hook-ID": components["parameters"]["headers.hook-id"];
                /** @description Event that generated the request */
                "ITAD-Event": components["parameters"]["headers.event"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": "pong";
            };
        };
        responses: {
            /** @description Return 200 to indicate webhook request was received successfuly */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Frequent or prolonged error responses (other than in 200 range) may in some cases cause webhook to be disabled
             *      */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "webhook-notification-post": {
        parameters: {
            query?: never;
            header: {
                "User-Agent": components["parameters"]["headers.user-agent"];
                "Content-Type": components["parameters"]["headers.content-type"];
                /** @description ID of the Webhook */
                "ITAD-Hook-ID": components["parameters"]["headers.hook-id"];
                /** @description Event that generated the request */
                "ITAD-Event": components["parameters"]["headers.event"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["obj.notification.game"][];
            };
        };
        responses: {
            /** @description Return 200 to indicate webhook request was received successfuly */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Frequent or prolonged error responses (other than in 200 range) may in some cases cause webhook to be disabled
             *      */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
